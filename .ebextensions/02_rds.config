Resources:
  AWSELBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
        GroupDescription: ELB SecurityGroup for ElasticBeanstalk environment custom postgres.
        GroupName: rds-postgres-custom-db-sg
        SecurityGroupIngress:
            - FromPort: 80
              ToPort: 80
              IpProtocol: tcp
              CidrIp : 0.0.0.0/0
            - FromPort: 443
              ToPort: 443
              IpProtocol: tcp
              CidrIp : 0.0.0.0/0
            - FromPort: 5432
              ToPort: 5432
              IpProtocol: tcp
              CidrIp : 0.0.0.0/0

  AWSEBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
        GroupDescription: EB SecurityGroup for ElasticBeanstalk environment.
        SecurityGroupIngress:
            - ToPort: 80
              FromPort: 80
              IpProtocol: tcp
              SourceSecurityGroupId: { "Fn::GetAtt" : [ "AWSELBSecurityGroup", "GroupId" ]}
  
  AWSEBRDSDatabase:
    Type: "AWS::RDS::DBInstance"
    Properties:
      AllocatedStorage: "20"
      DBInstanceClass: "db.t4g.micro"
      Engine: "postgres"
      EngineVersion: "17"
      MasterUsername: "postgres"
      MasterUserPassword: "mysecretpassword"
      DBName: "blacklist_db"
      PubliclyAccessible: true
      BackupRetentionPeriod: 7
      MultiAZ: false
      StorageType: gp2
      Port: 5432
      VPCSecurityGroups: 
        - { "Fn::GetAtt" : [ "AWSELBSecurityGroup", "GroupId" ]}
  
  RDSHostnameSecret:
    Type: "AWS::SecretsManager::Secret"
    Properties:
      Name: "blacklist-rds-hostname"
      SecretString: 
        "Fn::GetAtt": ["AWSEBRDSDatabase", "Endpoint.Address"]

Outputs:
  DatabaseURL:
    Description: "URL of the RDS DB instance"
    Value: {"Fn::GetAtt" : ["AWSEBRDSDatabase", "Endpoint.Address"]}
